plugins {
    id 'fr.brouillard.oss.gradle.jgitver' version '0.9.1'
    id 'java'
    id 'java-library'
    id 'checkstyle'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17

jgitver {
    strategy 'CONFIGURABLE'
    policy 'NEAREST'
    regexVersionTag 'v?([0-9]+(?:\\.[0-9]+){0,2}(?:-[a-zA-Z0-9\\-_\\.]+)?)'
    autoIncrementPatch false
    useDistance true
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://frcmaven.wpi.edu/artifactory/release'
        }
        maven {
            url 'https://maven.ctr-electronics.com/release/'
        }
        maven {
            url 'https://maven.revrobotics.com/'
        }
    }
}

def WPILIB_VER = '2023.2.1'
def NTCORE_VER = WPILIB_VER
def WPIUTIL_VER = WPILIB_VER
def OPENCV_VER = '4.6.0-4'
def PHOENIX_VER = '5.30.4'
def REV_VERSION = '2023.1.2'
def JUNIT_VER = '5.9.2'
def ARCH = 'linuxx86-64'

dependencies {
    // We may or may not need to add the new HAL library which was split off
    // from wpilib.  Ideally we don't have to touch it at all.
    implementation "edu.wpi.first.wpilibj:wpilibj-java:$WPILIB_VER"
    implementation "edu.wpi.first.wpilibNewCommands:wpilibNewCommands-java:$WPILIB_VER"
    implementation "edu.wpi.first.ntcore:ntcore-java:$NTCORE_VER"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:$WPIUTIL_VER"
    implementation "edu.wpi.first.wpimath:wpimath-java:$WPIUTIL_VER"
    implementation "edu.wpi.first.thirdparty.frc2023.opencv:opencv-java:$OPENCV_VER"
    implementation "com.revrobotics.frc:REVLib-java:$REV_VERSION"
    implementation "com.ctre.phoenix:api-java:$PHOENIX_VER"
    implementation "com.ctre.phoenix:wpiapi-java:$PHOENIX_VER"

    // Do not require these as runtime dependencies, since WPILib doesn't.
    // The user can figure out what version they need (RIO vs. desktop).
    testRuntimeOnly "edu.wpi.first.ntcore:ntcore-jni:$NTCORE_VER:$ARCH"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT_VER"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$JUNIT_VER"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$JUNIT_VER"
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'com.google.guava:guava:31.1-jre'
}

compileJava {
    options.deprecation = true
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

javadoc {
    options.addBooleanOption('html5', true)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description 'Builds a jar file full of sources.'
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description 'Builds a jar file full of javadocs.'
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }

            groupId 'org.hyperonline'
            artifactId 'hyperlib'

            pom {
                name = 'hyperLib'
                description = 'Enhancements to WPILib'
                url = 'https://teamhyper.github.io/hyperLib'
                developers {
                    developer {
                        id = 'blucoat'
                        name = 'James Hagborg'
                        email = 'jameshagborg@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/teamhyper/hyperLib'
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username = project.properties.hyperlibUser
                password = project.properties.hyperlibPassword
            }
            name = 'hyperonline'
            url = 'sftp://hyperlib.hyperonline.org:22/home/hyperlib/webapps/hyperlib-repo'
        }
    }
}

// By default, checkstyle wants to look at tests
// we override to only look at the main code
checkstyle {
    toolVersion = '9.3'
    configFile file("config/checkstyle/checkstyle.xml")
    sourceSets = [project.sourceSets.main]
}


wrapper {
    gradleVersion = '7.6'
}
